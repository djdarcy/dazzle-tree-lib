[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dazzletreelib"
dynamic = ["version"]
description = "High-performance tree traversal library with blazing fast async support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DazzleTreeLib Contributors"},
]
keywords = ["tree", "traversal", "async", "filesystem", "performance", "parallel"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Filesystems",
]
requires-python = ">=3.8"
dependencies = [
    "aiofiles>=0.8.0",
    "cachetools>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/djdarcy/DazzleTreeLib"
Documentation = "https://github.com/djdarcy/DazzleTreeLib#readme"
Repository = "https://github.com/djdarcy/DazzleTreeLib.git"
Issues = "https://github.com/djdarcy/DazzleTreeLib/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["dazzletreelib*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.dynamic]
version = {attr = "dazzletreelib.version.PIP_VERSION"}

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "tests/fixtures",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_error_context = true

[tool.coverage.run]
source = ["dazzletreelib"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
